
package webservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.0
 * 2014-09-23T13:39:57.498+02:00
 * Generated source version: 3.0.0
 * 
 */
public final class CalculadoraSoap_CalculadoraSoapImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://webservice/", "CalculadoraSoapImplService");

    private CalculadoraSoap_CalculadoraSoapImplPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = CalculadoraSoapImplService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        CalculadoraSoapImplService ss = new CalculadoraSoapImplService(wsdlURL, SERVICE_NAME);
        CalculadoraSoap port = ss.getCalculadoraSoapImplPort();  
        
        {
        System.out.println("Invoking restar...");
        float _restar_arg0 = 0.0f;
        float _restar_arg1 = 0.0f;
        float _restar__return = port.restar(_restar_arg0, _restar_arg1);
        System.out.println("restar.result=" + _restar__return);


        }
        {
        System.out.println("Invoking dividir...");
        float _dividir_arg0 = 0.0f;
        float _dividir_arg1 = 0.0f;
        float _dividir__return = port.dividir(_dividir_arg0, _dividir_arg1);
        System.out.println("dividir.result=" + _dividir__return);


        }
        {
        System.out.println("Invoking sumar...");
        float _sumar_arg0 = 0.0f;
        float _sumar_arg1 = 0.0f;
        float _sumar__return = port.sumar(_sumar_arg0, _sumar_arg1);
        System.out.println("sumar.result=" + _sumar__return);


        }
        {
        System.out.println("Invoking multiplicar...");
        float _multiplicar_arg0 = 0.0f;
        float _multiplicar_arg1 = 0.0f;
        float _multiplicar__return = port.multiplicar(_multiplicar_arg0, _multiplicar_arg1);
        System.out.println("multiplicar.result=" + _multiplicar__return);


        }

        System.exit(0);
    }

}
